version: '3.8'

services:
  mysql_db:
    image: mysql
    container_name: mysqldb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 30042005
      MYSQL_DATABASE: TaskFlow
      MYSQL_USER: user
      MYSQL_PASSWORD: 30042005
    ports:
      - "3307:3306"
    volumes:
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - dailylog_docker_app
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MjA1NzYxMTcwNjI2MzA4Mg==  
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - dailylog_docker_app
      
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  auth:
    image: kamaraliilya/auth_service:1.0
    container_name: auth_service
    restart: always
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/TaskFlow
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 30042005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - dailylog_docker_app

  task:
    image: kamaraliilya/task_service:1.0
    container_name: task_service
    restart: always
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/TaskFlow
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 30042005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - dailylog_docker_app

  project:
    image: kamaraliilya/project_service:1.0
    container_name: project_service
    restart: always
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/TaskFlow
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 30042005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    networks:
      - dailylog_docker_app

  user:
    image: kamaraliilya/user_service:1.0
    container_name: user_service
    restart: always
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/TaskFlow
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 30042005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8084:8084"
    networks:
      - dailylog_docker_app

  notification:
    image: kamaraliilya/notification_service:1.0
    container_name: notification_service
    restart: always
    depends_on:
      mysql_db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/TaskFlow
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 30042005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8083:8083"
    networks:
      - dailylog_docker_app

networks:
  dailylog_docker_app:
    driver: bridge